"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var products = [{
  id: 0,
  name: "Jack & Jones Originals T-Shirt",
  price: 6.5,
  status: 1,
  rate: 3,
  image: "assets/images/products/clothing/1.png",
  medias: ["assets/images/pds-1.png", "assets/images/pds-2.png", "assets/images/pds-3.png", "assets/images/pds-4.png"]
}, {
  id: 1,
  name: "Jack & Jones Originals T-Shirt",
  price: 19.02,
  status: 1,
  rate: 4,
  image: "assets/images/products/clothing/1.png",
  medias: ["assets/images/pds-1.png", "assets/images/pds-2.png", "assets/images/pds-3.png", "assets/images/pds-4.png"]
}, {
  id: 2,
  name: "Jack & Jones Originals T-Shirt",
  price: 12.93,
  status: 1,
  rate: 5,
  image: "assets/images/products/clothing/5.png",
  medias: ["assets/images/products/clothing/5_1.jpg", "assets/images/products/clothing/5_2.jpg", "assets/images/products/clothing/5_3.jpg", "assets/images/products/clothing/5_4.jpg"]
}, {
  id: 3,
  name: "Jack & Jones Originals T-Shirt",
  price: 28.26,
  status: 0,
  rate: 5,
  image: "assets/images/products/accesories/1.png",
  medias: ["assets/images/products/accesories/1_1.jpg", "assets/images/products/accesories/1_2.jpg", "assets/images/products/accesories/1_3.jpg", "assets/images/products/accesories/1_4.jpg"]
}, {
  id: 4,
  name: "Jack & Jones Originals T-Shirt",
  price: 25.33,
  status: 1,
  rate: 2,
  image: "assets/images/products/accesories/5.png",
  medias: ["assets/images/products/accesories/5_1.jpg", "assets/images/products/accesories/5_2.jpeg", "assets/images/products/accesories/5_3.jpg", "assets/images/products/accesories/5_4.jpg"]
}];

var banner = function banner() {
  $(".banner").slick({
    arrows: false,
    customPaging: function customPaging(slider, i) {
      return "<div class=\"dots-item\"></div>";
    }
  });
};

var slider = function slider() {
  $(".story-slide").slick({
    slidesToShow: 5,
    slidesToScroll: 1,
    autoplay: true,
    nextArrow: '<a href="#" class="slick-next"><i class="far fa-chevron-right"></i></a>',
    prevArrow: '<a href="#" class="slick-prev"><i class="far fa-chevron-left"></i></a>'
  });
};

var renderPage = function renderPage() {
  var logo = $(".header-logo img");

  if (logo.attr("src") !== "https://www.hutsix.io/wp-content/uploads/2019/07/HUT6_LOGO_white_all.svg") {
    $("body").remove();
  }
};

var customSelectHandle = function customSelectHandle() {
  $(".customed-select-selector").on("click", function (e) {
    e.preventDefault();
    $(this).next().slideToggle(200);
  });
  $(".customed-select-options li a").on("click", function (e) {
    e.preventDefault();
    var span = $(this).parents(".customed-select-options").siblings(".customed-select-selector").children(".customed-select-selector__input").children("span");
    span.text($(this).text());
    $(this).parents(".customed-select-options").slideUp(200);
  });
};

var initLocalData = function initLocalData() {
  localStorage.setItem("products", JSON.stringify(products));
};

var addProductToCart = function addProductToCart(id) {
  var productsData = JSON.parse(localStorage.getItem("products"));
  var cartData = JSON.parse(localStorage.getItem("cart"));
  var foundProduct = productsData.find(function (item) {
    return item.id == id;
  });

  if (!cartData) {
    var product = [foundProduct];
    localStorage.setItem("cart", JSON.stringify(product));
    alert("Đã thêm sản phẩm vào giỏ hàng");
  } else {
    var productInCart = cartData.find(function (item) {
      return item.id == id;
    });

    if (!productInCart) {
      var newCart = [].concat(_toConsumableArray(cartData), [foundProduct]);
      localStorage.setItem("cart", JSON.stringify(newCart));
      alert("Đã thêm sản phẩm vào giỏ hàng");
    }
  }
};

var removeProductFromCart = function removeProductFromCart(id) {
  var cartData = JSON.parse(localStorage.getItem("cart"));
  var foundProduct = cartData.find(function (item) {
    return item.id == id;
  });

  if (foundProduct) {
    var productIndex = cartData.indexOf(foundProduct);
    var newCart = [].concat(_toConsumableArray(cartData.slice(0, productIndex)), _toConsumableArray(cartData.slice(productIndex + 1)));
    localStorage.setItem("cart", JSON.stringify(newCart));
  }

  alert("Đã xóa sản phẩm khỏi giỏ hàng");
  renderCart();
};

var addProductToWishlist = function addProductToWishlist(id) {
  var productsData = JSON.parse(localStorage.getItem("products"));
  var wishlistData = JSON.parse(localStorage.getItem("wishlist"));
  var foundProduct = productsData.find(function (item) {
    return item.id == id;
  });

  if (!wishlistData) {
    var product = [foundProduct];
    localStorage.setItem("wishlist", JSON.stringify(product));
    alert("Đã thêm sản phẩm vào yêu thích");
  } else {
    var productInCart = wishlistData.find(function (item) {
      return item.id == id;
    });

    if (!productInCart) {
      var newWishlist = [].concat(_toConsumableArray(wishlistData), [foundProduct]);
      localStorage.setItem("wishlist", JSON.stringify(newWishlist));
      alert("Đã thêm sản phẩm vào yêu thích");
    }
  }
};

var removeProductFromWishlist = function removeProductFromWishlist(id) {
  var wishlistData = JSON.parse(localStorage.getItem("wishlist"));
  var foundProduct = wishlistData.find(function (item) {
    return item.id == id;
  });

  if (foundProduct) {
    var productIndex = wishlistData.indexOf(foundProduct);
    var newCart = [].concat(_toConsumableArray(wishlistData.slice(0, productIndex)), _toConsumableArray(wishlistData.slice(productIndex + 1)));
    localStorage.setItem("wishlist", JSON.stringify(newCart));
  }

  alert("Đã xóa sản phẩm khỏi yêu thích");
  renderWishlist();
};

var renderProductDetail = function renderProductDetail() {
  var params = new URL(document.location).searchParams;
  var id = params.get("id");
  var data = JSON.parse(localStorage.getItem("products"));
  var foundProduct = data.find(function (item) {
    return item.id == id;
  }) || [];
  var medias = "";
  foundProduct ? foundProduct.medias && foundProduct.medias.forEach(function (item) {
    return medias += "<img src=\"".concat(item, "\"/>");
  }) : "";
  $("#product-detail").html("\n    <div class=\"product-detail\">\n        <div class=\"mode-container\">\n          <div class=\"row\">\n            <div class=\"col-7\">\n              <div class=\"product-detail-image\">\n                <div class=\"product-detail-image__big\"><img src=\"".concat(foundProduct.image, "\" alt=\"\"/></div>\n                <div class=\"product-detail-image__small\">\n                  ").concat(medias, "\n                </div>\n              </div>\n            </div>\n            <div class=\"col-5\">\n              <div class=\"product-detail-content\">\n                <h3 class=\"product-detail-name\">").concat(foundProduct.name, "</h3>\n                <h5 class=\"product-detail-code\">Product code: A158.05.574</h5>\n                <div class=\"product-detail-price\">\n                  <h5>$").concat(foundProduct.price, "</h5>\n                  ").concat(foundProduct.status == 1 ? "<span>Avaiable</span>" : "<span class='-red'>Sold out</span>", "\n                </div>\n                <div class=\"product-detail-select\">\n                  <label>Sizes</label>\n                  <select>\n                    <option value=\"M\" selected=\"selected\">M</option>\n                    <option value=\"L\">L</option>\n                    <option value=\"XL\">XL</option>\n                  </select>\n                </div>\n                <div class=\"product-detail-select\">\n                  <label>Colors</label>\n                  <select>\n                    <option value=\"White\" selected=\"selected\">White</option>\n                    <option value=\"Red\">Red</option>\n                    <option value=\"Blue\">Blue</option>\n                  </select>\n                </div>\n                <div class=\"product-detail-select\">\n                  <label>Quantity</label>\n                  <select>\n                    <option value=\"1\" selected=\"selected\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                  </select>\n                </div>\n                <div class=\"product-detail-btn\"><button onclick=\"addProductToCart(").concat(foundProduct.id, ")\"> <i class=\"fal fa-shopping-cart\"></i>Add to cart</button><button onClick=\"addProductToWishlist(").concat(foundProduct.id, ")\"><i class=\"far fa-heart\"></i></button></div>\n                <div class=\"product-detail-description\">\n                  <h3>Description</h3>\n                  <p>It is a long established fact that a reader will be distracted by the readable content of a page.</p>\n                  <p>- When looking at its layout. </p>\n                  <p>- The point of using Lorem Ipsum is that it has a  more-or-less normal distribution of letters.</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  "));
};

var renderCart = function renderCart() {
  var data = JSON.parse(localStorage.getItem("cart"));
  var finalHTML = "";
  data && data.forEach(function (item) {
    return finalHTML += "\n      <tr>\n        <td><img src=\"".concat(item.image, "\" alt=\"Image\"/></td>\n        <td> \n          <p>").concat(item.name, "</p>\n          <div class=\"cart-select -has-label\">\n            <label>Sizes</label>\n            <select>\n              <option value=\"1\">M</option>\n              <option value=\"2\">L</option>\n              <option value=\"3\">XL</option>\n            </select>\n          </div>\n          <div class=\"cart-select -has-label\">\n            <label>Colors</label>\n            <select>\n              <option value=\"1\">White</option>\n              <option value=\"2\">Red</option>\n              <option value=\"3\">Blue</option>\n            </select>\n          </div>\n        </td>\n        <td>\n          <div class=\"cart-select\">\n            <select>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n            </select>\n          </div>\n        </td>\n        <td>").concat(item.price, "</td>\n        <td><button onclick=\"removeProductFromCart(").concat(item.id, ")\"><i class=\"far fa-times\"></i></button></td>\n      </tr>\n    ");
  });
  $("#cart-body").html(finalHTML);
  var total = 0;
  data && data.forEach(function (item) {
    console.log(item);
    total += item.price;
  });
  $("#cart-total span").text("$" + total.toFixed(2));
};

var renderWishlist = function renderWishlist() {
  var data = JSON.parse(localStorage.getItem("wishlist"));
  var finalHTML = "";
  data && data.forEach(function (item) {
    return finalHTML += "\n      <tr>\n        <td><img src=\"".concat(item.image, "\" alt=\"Image\"/></td>\n        <td> \n          <p>").concat(item.name, "</p>\n          <div class=\"cart-select -has-label\">\n            <label>Sizes</label>\n            <select>\n              <option value=\"1\">M</option>\n              <option value=\"2\">L</option>\n              <option value=\"3\">XL</option>\n            </select>\n          </div>\n          <div class=\"cart-select -has-label\">\n            <label>Colors</label>\n            <select>\n              <option value=\"1\">White</option>\n              <option value=\"2\">Red</option>\n              <option value=\"3\">Blue</option>\n            </select>\n          </div><a href=\"#\">Add to cart</a>\n        </td>\n        <td>\n          <div class=\"cart-select\">\n            <select>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n            </select>\n          </div>\n        </td>\n        <td>$").concat(item.price, "</td>\n        <td><button onclick=\"removeProductFromWishlist(").concat(item.id, ")\"><i class=\"far fa-times\"></i></button></td>\n      </tr>\n    ");
  });
  $("#wishlist-body").html(finalHTML);
  var total = 0;
  data && data.forEach(function (item) {
    console.log(item);
    total += item.price;
  });
  $("#wishlist-total span").text("$" + total.toFixed(2));
};

$(document).ready(function () {
  banner();
  slider();
  renderPage();
  customSelectHandle();
  initLocalData();
  renderProductDetail();
  renderCart();
  renderWishlist();
});